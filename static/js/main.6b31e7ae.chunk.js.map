{"version":3,"sources":["contexts/leboncoin/index.tsx","components/Offer/Loader.tsx","contexts/firebase/index.tsx","components/Offer/Attributes.tsx","components/Offer/Row.tsx","components/Offer/Table.tsx","components/Auth/Signin.tsx","contexts/firebase/Provider.tsx","contexts/leboncoin/utils.ts","contexts/leboncoin/Provider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Leboncoin","createContext","useContext","Loader","colSpan","Firebase","OfferAttributesBadge","attribute","className","title","key","key_label","Badge","variant","value_label","value","OfferAttributes","attributes","useState","show","setShow","primary","filter","includes","secondary","rooms","find","map","Button","block","onClick","prev","icon","OfferRow","link","read","write","getOffer","useLeboncoin","linkMatch","match","offerKey","offer","setOffer","data","setData","useEffect","then","console","error","square","href","price","squarePrice","Number","handleChangeNote","event","note","currentTarget","undefined","rel","target","subject","Carousel","interval","images","urls","src","index","Item","alt","body","toLocaleString","toFixed","location","city","Form","Control","as","onChange","defaultValue","OfferTable","links","hasMore","loadMore","loader","Table","striped","bordered","hover","element","content","placeholder","component","AuthSignin","onSignin","props","loading","setLoading","email","setEmail","password","setPassword","Container","spin","onSubmit","preventDefault","log","firebase","auth","signInWithEmailAndPassword","window","alert","finally","Group","FormLabel","FormControl","type","FirebaseProvider","children","user","setUser","useCallback","ref","Promise","resolve","reject","database","on","snapshot","val","set","initializeApp","apiKey","appId","authDomain","databaseURL","measurementId","messagingSenderId","projectId","storageBucket","analytics","Provider","api","setup","baseURL","cache","maxAge","domparser","DOMParser","fetchDOM","config","url","URL","pathname","_","fixUrl","get","response","parseFromString","handleOffer","dom","a","querySelector","parsedData","textContent","JSON","parse","pageProps","ad","handleSearchResults","nextPageLink","Array","from","querySelectorAll","span","parentNode","nodeName","getLinks","pageLink","search","params","LeboncoinProvider","setNextPageLink","setLinks","leboncoin","category","immo_sell_type","locations","real_estate_type","result","prevLinks","library","add","faEllipsisH","faSpinner","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6b31e7ae.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport interface OfferAttribute {\n  key: string;\n  value: string;\n  key_label: string;\n  value_label: string;\n  generic: boolean;\n}\n\nexport interface Offer {\n  list_id: number;\n  first_publication_date: string;\n  index_date: string;\n  status: string; // \"active\"\n  category_id: string;\n  category_name: string;\n  subject: string;\n  body: string;\n  ad_type: string; // \"offer\",\n  url: string;\n  price: number[];\n  price_calendar: null;\n  images: {\n    thumb_url: string;\n    small_url: string;\n    nb_images: number;\n    urls: string[];\n    urls_thumb: string[];\n    urls_large: string[];\n  };\n  attributes: OfferAttribute[];\n  location: {\n    country_id: string;\n    region_id: string;\n    region_name: string;\n    department_id: string;\n    department_name: string;\n    city_label: string;\n    city: string;\n    zipcode: string;\n    lat: number;\n    lng: number;\n    source: string;\n    provider: string;\n    is_shape: boolean;\n    feature: {\n      type: string;\n      geometry: {\n        type: string;\n        coordinates: [number, number];\n      };\n      properties: null;\n    };\n  };\n  owner: {\n    store_id: string;\n    user_id: string;\n    type: string;\n    name: string;\n    siren: string;\n    pro_rates_link: string;\n    no_salesmen: boolean;\n  };\n  options: {\n    has_option: boolean;\n    booster: boolean;\n    photosup: boolean;\n    urgent: boolean;\n    gallery: boolean;\n    sub_toplist: boolean;\n  };\n  has_phone: boolean;\n}\n\ninterface LeboncoinContext {\n  hasMore: boolean;\n  links: string[];\n  getOffer: (url: string) => Promise<Offer | undefined>;\n  loadMore: () => void;\n}\n\nexport const Leboncoin = createContext<LeboncoinContext | null>(null);\n\nexport default () => useContext(Leboncoin) as LeboncoinContext;\n","import React, { FC } from \"react\";\n\nconst Loader: FC = () => (\n  <td colSpan={2}>\n    <em>Loading...</em>\n  </td>\n);\n\nexport default Loader;\n","import { createContext, useContext } from \"react\";\n\nexport interface FirebaseData {\n  note: string;\n}\n\ninterface FirebaseContext {\n  read: (ref: string) => Promise<FirebaseData>;\n  write: (ref: string, data: FirebaseData) => Promise<void>;\n}\n\nexport const Firebase = createContext<FirebaseContext | null>(null);\n\nexport default () => useContext(Firebase) as FirebaseContext;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FC, useState } from \"react\";\nimport { Badge, Button } from \"react-bootstrap\";\n\nimport { OfferAttribute } from \"../../contexts/leboncoin\";\n\nconst OfferAttributesBadge: FC<{ attribute: OfferAttribute }> = ({\n  attribute,\n}) => {\n  return (\n    <p className=\"OfferAttributes-attribute\" title={attribute.key}>\n      <small>{attribute.key_label || attribute.key}</small>\n      <Badge variant=\"secondary\">\n        {attribute.value_label || attribute.value}\n      </Badge>\n    </p>\n  );\n};\n\nconst OfferAttributes: FC<{ attributes: OfferAttribute[] }> = ({\n  attributes,\n}) => {\n  const [show, setShow] = useState<boolean>(false);\n  const toggle = () => setShow((prev) => !prev);\n  const getAttribute = (key: string) =>\n    attributes.find((attribute) => attribute.key === key);\n  const primary = attributes.filter((attribute) =>\n    [\"energy_rate\", \"fai_included\", \"ges\"].includes(attribute.key)\n  );\n  const secondary = attributes.filter(\n    (attribute) =>\n      ![\"energy_rate\", \"fai_included\", \"ges\", \"rooms\", \"square\"].includes(\n        attribute.key\n      )\n  );\n  const rooms = getAttribute(\"rooms\");\n  return (\n    <div className=\"OfferAttributes\">\n      {rooms ? (\n        <p className=\"OfferAttributes-rooms\">\n          <big>{rooms.value}</big> {rooms.key_label}\n        </p>\n      ) : null}\n      <hr />\n      {primary.map((attribute) => (\n        <OfferAttributesBadge key={attribute.key} attribute={attribute} />\n      ))}\n      {show ? (\n        secondary.map((attribute) => (\n          <OfferAttributesBadge key={attribute.key} attribute={attribute} />\n        ))\n      ) : (\n        <Button block={true} onClick={toggle} variant=\"light\">\n          <FontAwesomeIcon icon=\"ellipsis-h\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default OfferAttributes;\n","import React, { ChangeEvent, FC, useEffect, useState } from \"react\";\nimport { Badge, Carousel, Form } from \"react-bootstrap\";\n\nimport useLeboncoin, { Offer } from \"../../contexts/leboncoin\";\nimport useFirebase, { FirebaseData } from \"../../contexts/firebase\";\nimport OfferAttributes from \"./Attributes\";\nimport Loader from \"./Loader\";\n\nconst OfferRow: FC<{ link: string }> = ({ link }) => {\n  const { read, write } = useFirebase();\n  const { getOffer } = useLeboncoin();\n\n  const linkMatch = link.match(/.*\\/(.+?)\\./);\n  const offerKey = linkMatch && linkMatch[1];\n\n  const [offer, setOffer] = useState<Offer | undefined>();\n  const [data, setData] = useState<FirebaseData>();\n\n  useEffect(() => {\n    if (offerKey) {\n      getOffer(link).then(setOffer);\n      read(offerKey).then(setData, console.error);\n    }\n  }, [getOffer, link, offerKey, read]);\n\n  const getAttribute = (key: string) =>\n    offer?.attributes.find((attribute) => attribute.key === key);\n  const square = getAttribute(\"square\");\n  const href = \"https://www.leboncoin.fr\" + link;\n  const price = offer?.price[0];\n  const squarePrice = square ? Number(price) / Number(square.value) : 0;\n\n  const handleChangeNote = offerKey\n    ? (event: ChangeEvent<HTMLTextAreaElement>) => {\n        const note = event.currentTarget.value;\n        write(offerKey, { note });\n      }\n    : undefined;\n\n  return offer ? (\n    <>\n      <td>\n        <a\n          className=\"OfferRow-link\"\n          href={href}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <strong className=\"OfferRow-subject\">{offer.subject}</strong>\n        </a>\n        <Carousel className=\"OfferRow-images\" interval={null}>\n          {offer.images.urls.map((src: string, index) => (\n            <Carousel.Item key={index}>\n              <img alt={offer.subject} src={src} />\n            </Carousel.Item>\n          ))}\n        </Carousel>\n        <p className=\"OfferRow-body\">{offer.body}</p>\n      </td>\n      <td>\n        <div className=\"OfferRow-header\">\n          <big className=\"OfferRow-price\">\n            {Number(price).toLocaleString(\"fr\")} <small>€</small>\n          </big>\n          <span className=\"OfferRow-separator\">/</span>\n          <big className=\"OfferRow-square\">\n            {square?.value} <small>m²</small>\n          </big>\n        </div>\n        <Badge variant=\"secondary\">\n          {squarePrice.toFixed(2)} <small>€/m²</small>\n        </Badge>\n        <hr />\n        <strong>{offer.location.city}</strong>\n        <OfferAttributes attributes={offer.attributes} />\n      </td>\n      <td>\n        <Form className=\"OfferRow-notes\">\n          <Form.Control\n            as=\"textarea\"\n            onChange={handleChangeNote}\n            defaultValue={data?.note}\n          />\n        </Form>\n      </td>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default OfferRow;\n","import React, { FC } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport LazilyRender from \"react-lazily-render\";\n\nimport useLeboncoin from \"../../contexts/leboncoin\";\nimport Loader from \"./Loader\";\nimport OfferRow from \"./Row\";\n\nconst OfferTable: FC = () => {\n  const { links, hasMore, loadMore } = useLeboncoin();\n  const loader = (\n    <tr key={0}>\n      <Loader />\n    </tr>\n  );\n  return (\n    <Table className=\"OfferTable\" striped={true} bordered={true} hover={true}>\n      <InfiniteScroll\n        element=\"tbody\"\n        loadMore={loadMore}\n        hasMore={hasMore}\n        loader={loader}\n      >\n        {links.map((link) => {\n          const content = <OfferRow link={link} />;\n          const placeholder = <Loader />;\n          return (\n            <LazilyRender\n              className=\"OfferRow\"\n              component=\"tr\"\n              content={content}\n              key={link}\n              placeholder={placeholder}\n            />\n          );\n        })}\n      </InfiniteScroll>\n    </Table>\n  );\n};\n\nexport default OfferTable;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport firebase from \"firebase\";\nimport React, { ChangeEvent, FC, FormEvent, useState } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  FormLabel,\n  FormProps,\n} from \"react-bootstrap\";\n\nconst AuthSignin: FC<\n  FormProps & { onSignin: (user: firebase.auth.UserCredential) => void }\n> = ({ onSignin, ...props }) => {\n  const [loading, setLoading] = useState<boolean>();\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const handleChangeEmail = (event: ChangeEvent<HTMLInputElement>) =>\n    setEmail(event.currentTarget.value);\n  const handleChangePassword = (event: ChangeEvent<HTMLInputElement>) =>\n    setPassword(event.currentTarget.value);\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    setLoading(true);\n    event.preventDefault();\n    console.log({ email, password });\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(onSignin, window.alert)\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <Container>\n      {loading ? (\n        <FontAwesomeIcon icon=\"spinner\" spin={true} />\n      ) : (\n        <Form onSubmit={handleSubmit} {...props}>\n          <Form.Group>\n            <FormLabel>Email</FormLabel>\n            <FormControl\n              defaultValue={email}\n              onChange={handleChangeEmail}\n              type=\"email\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <FormLabel>Password</FormLabel>\n            <FormControl\n              defaultValue={password}\n              onChange={handleChangePassword}\n              type=\"password\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control type=\"submit\" value=\"Login\" />\n          </Form.Group>\n        </Form>\n      )}\n    </Container>\n  );\n};\n\nexport default AuthSignin;\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\nimport AuthSignin from \"../../components/Auth/Signin\";\nimport { Firebase, FirebaseData } from \"./index\";\n\nexport const FirebaseProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<firebase.auth.UserCredential>();\n\n  const read = useCallback(\n    (ref: string) =>\n      new Promise<FirebaseData>((resolve, reject) =>\n        firebase\n          .database()\n          .ref(ref)\n          .on(\n            \"value\",\n            (snapshot) => {\n              const value = snapshot.val();\n              resolve(value);\n            },\n            reject\n          )\n      ),\n    []\n  );\n\n  const write = useCallback(\n    (ref: string, data: FirebaseData) => firebase.database().ref(ref).set(data),\n    []\n  );\n\n  useEffect(() => {\n    // Initialize Firebase\n    firebase.initializeApp({\n      apiKey: \"AIzaSyBEY_VzCdPC2JGCZLKf-EQ4DXhGAbV7ZzU\",\n      appId: \"1:300973941756:web:db15739d45c57cf4efc879\",\n      authDomain: \"lecoincoin-c16f9.firebaseapp.com\",\n      databaseURL: \"https://lecoincoin-c16f9.firebaseio.com\",\n      measurementId: \"G-B18K0TER1G\",\n      messagingSenderId: \"300973941756\",\n      projectId: \"lecoincoin-c16f9\",\n      storageBucket: \"lecoincoin-c16f9.appspot.com\",\n    });\n    firebase.analytics();\n  }, []);\n\n  if (user === undefined) {\n    return <AuthSignin onSignin={setUser} />;\n  }\n\n  return (\n    <Firebase.Provider\n      value={{\n        read,\n        write,\n      }}\n    >\n      {children}\n    </Firebase.Provider>\n  );\n};\n\nexport default FirebaseProvider;\n","import { AxiosRequestConfig } from \"axios\";\nimport { setup } from \"axios-cache-adapter\";\n\nimport { Offer } from \"./index\";\n\n// Create `axios` instance with pre-configured `axios-cache-adapter` attached to it\nconst api = setup({\n  // `axios` options\n  baseURL: \"https://www.leboncoin.fr\",\n  // `axios-cache-adapter` options\n  cache: {\n    maxAge: 30 * 60 * 1000,\n  },\n});\n\nconst domparser = new DOMParser();\n\nconst fetchDOM = (link: string, config?: AxiosRequestConfig) => {\n  const fixUrl = () => {\n    try {\n      const valid = new URL(link);\n      return valid.pathname;\n    } catch (_) {\n      return link;\n    }\n  };\n  const url = fixUrl();\n  return api\n    .get(url, config)\n    .then((response) => domparser.parseFromString(response.data, \"text/html\"));\n};\n\nconst handleOffer = async (dom: Document): Promise<Offer> => {\n  const data = dom.querySelector(\"#__NEXT_DATA__\");\n  const parsedData = data?.textContent && JSON.parse(data.textContent);\n  return parsedData?.props?.pageProps?.ad;\n};\n\ntype PageLinkType = HTMLAnchorElement | null | undefined;\n\nconst handleSearchResults = async (\n  dom: Document\n): Promise<{ nextPageLink?: string; links: string[] }> => {\n  const nextPageLink = Array.from<HTMLAnchorElement>(\n    dom.querySelectorAll('span[name=\"chevronright\"]')\n  )\n    .map((span) => span.parentNode)\n    .find((a) => (a && a.nodeName) === \"A\") as PageLinkType;\n  const links = Array.from<HTMLAnchorElement>(\n    dom.querySelectorAll('li[data-qa-id=\"aditem_container\"] a')\n  ).map((a) => a.href);\n  console.log({\n    links,\n    nextPageLink: nextPageLink ? nextPageLink.href : undefined,\n  });\n  return {\n    links,\n    nextPageLink: nextPageLink ? nextPageLink.href : undefined,\n  };\n};\n\nexport default {\n  getLinks: (pageLink: string) => fetchDOM(pageLink).then(handleSearchResults),\n  getOffer: (url: string) => fetchDOM(url).then(handleOffer),\n  search: (params: object) =>\n    fetchDOM(\"/recherche\", { params }).then(handleSearchResults),\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Leboncoin } from \"./index\";\n\nimport leboncoin from \"./utils\";\n\nexport const LeboncoinProvider: FC = ({ children }) => {\n  const [nextPageLink, setNextPageLink] = useState<string>();\n  const [links, setLinks] = useState<string[]>([]);\n\n  useEffect(() => {\n    leboncoin\n      .search({\n        category: \"9\",\n        immo_sell_type: \"old,new\",\n        locations: \"Caen_14000__49.18461_-0.37375_4167\",\n        price: \"75000-175000\",\n        real_estate_type: \"2\",\n        rooms: \"3-max\",\n        square: \"30-max\",\n      })\n      .then((result) => {\n        setNextPageLink(result.nextPageLink);\n        setLinks(result.links);\n      }, console.error);\n  }, []);\n\n  return (\n    <Leboncoin.Provider\n      value={{\n        getOffer: leboncoin.getOffer,\n        hasMore: nextPageLink !== undefined,\n        links,\n        loadMore: () =>\n          nextPageLink &&\n          leboncoin.getLinks(nextPageLink).then((result) => {\n            setNextPageLink(result.nextPageLink);\n            setLinks((prevLinks) => [...prevLinks, ...result.links]);\n          }),\n      }}\n    >\n      {children}\n    </Leboncoin.Provider>\n  );\n};\n\nexport default LeboncoinProvider;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faEllipsisH, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport OfferTable from \"./components/Offer/Table\";\nimport FirebaseProvider from \"./contexts/firebase/Provider\";\nimport LeboncoinProvider from \"./contexts/leboncoin/Provider\";\n\nlibrary.add(faEllipsisH, faSpinner);\n\nfunction App() {\n  return (\n    <LeboncoinProvider>\n      <FirebaseProvider>\n        <OfferTable />\n      </FirebaseProvider>\n    </LeboncoinProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}