{"version":3,"sources":["contexts/leboncoin/index.tsx","components/Offer/Loader.tsx","components/Offer/Row.tsx","components/Offer/Table.tsx","contexts/leboncoin/utils.ts","contexts/leboncoin/Provider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Leboncoin","createContext","useContext","Loader","colSpan","OfferRow","link","useLeboncoin","getAttribute","getOffer","useState","offer","setOffer","useEffect","console","count","then","href","square","price","squarePrice","Number","value","className","rel","target","subject","Carousel","interval","images","urls","map","src","index","Item","key","alt","body","toLocaleString","Badge","variant","toFixed","attributes","attribute","value_label","OfferTable","links","hasMore","loadMore","loader","Table","striped","bordered","hover","element","content","placeholder","component","api","setup","baseURL","cache","maxAge","fetchDOM","url","config","get","response","JSDOM","data","handleOffer","dom","a","window","document","querySelector","parsedData","textContent","JSON","parse","props","pageProps","ad","handleSearchResults","nextPageLink","Array","from","querySelectorAll","span","parentNode","find","nodeName","undefined","getLinks","pageLink","search","params","LeboncoinProvider","children","setNextPageLink","setLinks","leboncoin","category","immo_sell_type","locations","real_estate_type","rooms","result","error","Provider","prevLinks","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2497838d.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport interface OfferAttribute {\n  key: string;\n  value: string;\n  key_label: string;\n  value_label: string;\n  generic: boolean;\n}\n\nexport interface Offer {\n  list_id: number;\n  first_publication_date: string;\n  index_date: string;\n  status: string; // \"active\"\n  category_id: string;\n  category_name: string;\n  subject: string;\n  body: string;\n  ad_type: string; // \"offer\",\n  url: string;\n  price: number[];\n  price_calendar: null;\n  images: {\n    thumb_url: string;\n    small_url: string;\n    nb_images: number;\n    urls: string[];\n    urls_thumb: string[];\n    urls_large: string[];\n  };\n  attributes: OfferAttribute[];\n  location: {\n    country_id: string;\n    region_id: string;\n    region_name: string;\n    department_id: string;\n    department_name: string;\n    city_label: string;\n    city: string;\n    zipcode: string;\n    lat: number;\n    lng: number;\n    source: string;\n    provider: string;\n    is_shape: boolean;\n    feature: {\n      type: string;\n      geometry: {\n        type: string;\n        coordinates: [number, number];\n      };\n      properties: null;\n    };\n  };\n  owner: {\n    store_id: string;\n    user_id: string;\n    type: string;\n    name: string;\n    siren: string;\n    pro_rates_link: string;\n    no_salesmen: boolean;\n  };\n  options: {\n    has_option: boolean;\n    booster: boolean;\n    photosup: boolean;\n    urgent: boolean;\n    gallery: boolean;\n    sub_toplist: boolean;\n  };\n  has_phone: boolean;\n}\n\ninterface LeboncoinContext {\n  hasMore: boolean;\n  links: string[];\n  getAttribute: (key: string, offer?: Offer) => OfferAttribute | undefined;\n  getOffer: (url: string) => Promise<Offer | undefined>;\n  loadMore: () => void;\n}\n\nexport const Leboncoin = createContext<LeboncoinContext | null>(null);\n\nexport default () => useContext(Leboncoin) as LeboncoinContext;\n","import React, { FC } from \"react\";\n\nconst Loader: FC = () => (\n  <td colSpan={3}>\n    <em>Loading...</em>\n  </td>\n);\n\nexport default Loader;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Badge, Carousel } from \"react-bootstrap\";\n\nimport useLeboncoin, { Offer } from \"../../contexts/leboncoin\";\nimport Loader from \"./Loader\";\n\nconst OfferRow: FC<{ link: string }> = ({ link }) => {\n  const { getAttribute, getOffer } = useLeboncoin();\n  const [offer, setOffer] = useState<Offer | undefined>();\n  useEffect(() => {\n    console.count(\"FETCHING AND RENDERING OFFER\");\n    getOffer(link).then(setOffer);\n  }, [getOffer, link]);\n  const href = \"https://www.leboncoin.fr\" + link;\n  const square = getAttribute(\"square\", offer);\n  const price = offer?.price[0];\n  const squarePrice = square ? Number(price) / Number(square.value) : 0;\n  return offer ? (\n    <>\n      <td>\n        <a\n          className=\"OfferRow-link\"\n          href={href}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <strong className=\"OfferRow-subject\">{offer.subject}</strong>\n        </a>\n        <Carousel className=\"OfferRow-images\" interval={null}>\n          {offer.images.urls.map((src: string, index) => (\n            <Carousel.Item key={index}>\n              <img alt={offer.subject} src={src} />\n            </Carousel.Item>\n          ))}\n        </Carousel>\n        <p className=\"OfferRow-body\">{offer.body}</p>\n      </td>\n      <td>\n        <div className=\"OfferRow-value\">\n          <big className=\"OfferRow-price\">\n            {Number(price).toLocaleString(\"fr\")} <small>€</small>\n          </big>\n          <span className=\"OfferRow-separator\">/</span>\n          <big className=\"OfferRow-square\">\n            {square?.value} <small>m²</small>\n          </big>\n        </div>\n        <Badge variant=\"secondary\">\n          {squarePrice.toFixed(2)} <small>€/m²</small>\n        </Badge>\n      </td>\n      <td className=\"OfferRow-attributes\">\n        {offer.attributes.map((attribute) => (\n          <div key={attribute.key} className=\"OfferRow-attribute\">\n            <small>{attribute.key}</small>\n            <Badge variant=\"secondary\">\n              {attribute.value_label || attribute.value}\n            </Badge>\n          </div>\n        ))}\n      </td>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default OfferRow;\n","import React, { FC } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport LazilyRender from \"react-lazily-render\";\n\nimport useLeboncoin from \"../../contexts/leboncoin\";\nimport Loader from \"./Loader\";\nimport OfferRow from \"./Row\";\n\nconst OfferTable: FC = () => {\n  const { links, hasMore, loadMore } = useLeboncoin();\n  const loader = (\n    <tr key={0}>\n      <Loader />\n    </tr>\n  );\n  return (\n    <Table className=\"OfferTable\" striped={true} bordered={true} hover={true}>\n      <InfiniteScroll\n        element=\"tbody\"\n        loadMore={loadMore}\n        hasMore={hasMore}\n        loader={loader}\n      >\n        {links.map((link) => {\n          const content = <OfferRow link={link} />;\n          const placeholder = <Loader />;\n          return (\n            <LazilyRender\n              className=\"OfferRow\"\n              component=\"tr\"\n              content={content}\n              key={link}\n              placeholder={placeholder}\n            />\n          );\n        })}\n      </InfiniteScroll>\n    </Table>\n  );\n};\n\nexport default OfferTable;\n","import { AxiosRequestConfig } from \"axios\";\nimport { JSDOM } from \"jsdom\";\nimport { setup } from \"axios-cache-adapter\";\n\nimport { Offer } from \"./index\";\n\n// Create `axios` instance with pre-configured `axios-cache-adapter` attached to it\nconst api = setup({\n  // `axios` options\n  baseURL: \"https://www.leboncoin.fr\",\n  // `axios-cache-adapter` options\n  cache: {\n    maxAge: 30 * 60 * 1000,\n  },\n});\n\nconst fetchDOM = (url: string, config?: AxiosRequestConfig) =>\n  api.get(url, config).then((response) => new JSDOM(response.data));\n\nconst handleOffer = async (dom: JSDOM): Promise<Offer> => {\n  const data = dom.window.document.querySelector(\"#__NEXT_DATA__\");\n  const parsedData = data?.textContent && JSON.parse(data.textContent);\n  return parsedData?.props?.pageProps?.ad;\n};\n\ntype PageLinkType = HTMLAnchorElement | null | undefined;\n\nconst handleSearchResults = async (\n  dom: JSDOM\n): Promise<{ nextPageLink?: string; links: string[] }> => {\n  const nextPageLink = Array.from<HTMLAnchorElement>(\n    dom.window.document.querySelectorAll('span[name=\"chevronright\"]')\n  )\n    .map((span) => span.parentNode)\n    .find((a) => (a && a.nodeName) === \"A\") as PageLinkType;\n  const links = Array.from<HTMLAnchorElement>(\n    dom.window.document.querySelectorAll('li[data-qa-id=\"aditem_container\"] a')\n  ).map((a) => a.href);\n  return {\n    links,\n    nextPageLink: nextPageLink ? nextPageLink.href : undefined,\n  };\n};\n\nexport default {\n  getLinks: (pageLink: string) => fetchDOM(pageLink).then(handleSearchResults),\n  getOffer: (url: string) => fetchDOM(url).then(handleOffer),\n  search: (params: object) =>\n    fetchDOM(\"/recherche\", { params }).then(handleSearchResults),\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Leboncoin, Offer } from \"./index\";\n\nimport leboncoin from \"./utils\";\n\nexport const LeboncoinProvider: FC = ({ children }) => {\n  const [nextPageLink, setNextPageLink] = useState<string>();\n  const [links, setLinks] = useState<string[]>([]);\n\n  useEffect(() => {\n    leboncoin\n      .search({\n        category: \"9\",\n        immo_sell_type: \"old,new\",\n        locations: \"Caen_14000__49.18461_-0.37375_4167\",\n        price: \"75000-175000\",\n        real_estate_type: \"2\",\n        rooms: \"3-max\",\n        square: \"30-max\",\n      })\n      .then((result) => {\n        setNextPageLink(result.nextPageLink);\n        setLinks(result.links);\n      }, console.error);\n  }, []);\n\n  return (\n    <Leboncoin.Provider\n      value={{\n        getAttribute: (key: string, offer?: Offer) =>\n          offer?.attributes.find((attribute) => attribute.key === key),\n        getOffer: leboncoin.getOffer,\n        hasMore: nextPageLink !== undefined,\n        links,\n        loadMore: () =>\n          nextPageLink &&\n          leboncoin.getLinks(nextPageLink).then((result) => {\n            setNextPageLink(result.nextPageLink);\n            setLinks((prevLinks) => [...prevLinks, ...result.links]);\n          }),\n      }}\n    >\n      {children}\n    </Leboncoin.Provider>\n  );\n};\n\nexport default LeboncoinProvider;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport OfferTable from \"./components/Offer/Table\";\n\nimport LebonCoinProvider from \"./contexts/leboncoin/Provider\";\n\nfunction App() {\n  return (\n    <LebonCoinProvider>\n      <OfferTable />\n    </LebonCoinProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}